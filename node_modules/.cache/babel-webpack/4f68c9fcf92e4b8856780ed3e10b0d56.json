{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createAutocompleteSource;\n\nvar _configure = _interopRequireDefault(require(\"./configure\"));\n\nvar _formatHit = _interopRequireDefault(require(\"./formatHit\"));\n\nvar _version = _interopRequireDefault(require(\"./version\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction createAutocompleteSource(_ref) {\n  var algoliasearch = _ref.algoliasearch,\n      clientOptions = _ref.clientOptions,\n      apiKey = _ref.apiKey,\n      appId = _ref.appId,\n      hitsPerPage = _ref.hitsPerPage,\n      aroundLatLng = _ref.aroundLatLng,\n      aroundRadius = _ref.aroundRadius,\n      aroundLatLngViaIP = _ref.aroundLatLngViaIP,\n      insideBoundingBox = _ref.insideBoundingBox,\n      insidePolygon = _ref.insidePolygon,\n      getRankingInfo = _ref.getRankingInfo,\n      countries = _ref.countries,\n      formatInputValue = _ref.formatInputValue,\n      _ref$computeQueryPara = _ref.computeQueryParams,\n      computeQueryParams = _ref$computeQueryPara === void 0 ? function (params) {\n    return params;\n  } : _ref$computeQueryPara,\n      _ref$useDeviceLocatio = _ref.useDeviceLocation,\n      useDeviceLocation = _ref$useDeviceLocatio === void 0 ? false : _ref$useDeviceLocatio,\n      _ref$language = _ref.language,\n      language = _ref$language === void 0 ? navigator.language.split('-')[0] : _ref$language,\n      _ref$onHits = _ref.onHits,\n      onHits = _ref$onHits === void 0 ? function () {} : _ref$onHits,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? function (e) {\n    throw e;\n  } : _ref$onError,\n      onRateLimitReached = _ref.onRateLimitReached,\n      onInvalidCredentials = _ref.onInvalidCredentials,\n      type = _ref.type;\n  var placesClient = algoliasearch.initPlaces(appId, apiKey, clientOptions);\n  placesClient.as.addAlgoliaAgent(\"Algolia Places \".concat(_version[\"default\"]));\n  var configuration = (0, _configure[\"default\"])({\n    hitsPerPage: hitsPerPage,\n    type: type,\n    countries: countries,\n    language: language,\n    aroundLatLng: aroundLatLng,\n    aroundRadius: aroundRadius,\n    aroundLatLngViaIP: aroundLatLngViaIP,\n    insideBoundingBox: insideBoundingBox,\n    insidePolygon: insidePolygon,\n    getRankingInfo: getRankingInfo,\n    formatInputValue: formatInputValue,\n    computeQueryParams: computeQueryParams,\n    useDeviceLocation: useDeviceLocation,\n    onHits: onHits,\n    onError: onError,\n    onRateLimitReached: onRateLimitReached,\n    onInvalidCredentials: onInvalidCredentials\n  });\n  var params = configuration.params;\n  var controls = configuration.controls;\n  var userCoords;\n  var tracker = null;\n\n  if (controls.useDeviceLocation) {\n    tracker = navigator.geolocation.watchPosition(function (_ref2) {\n      var coords = _ref2.coords;\n      userCoords = \"\".concat(coords.latitude, \",\").concat(coords.longitude);\n    });\n  }\n\n  function searcher(query, cb) {\n    var searchParams = _objectSpread({}, params, {\n      query: query\n    });\n\n    if (userCoords) {\n      searchParams.aroundLatLng = userCoords;\n    }\n\n    return placesClient.search(controls.computeQueryParams(searchParams)).then(function (content) {\n      var hits = content.hits.map(function (hit, hitIndex) {\n        return (0, _formatHit[\"default\"])({\n          formatInputValue: controls.formatInputValue,\n          hit: hit,\n          hitIndex: hitIndex,\n          query: query,\n          rawAnswer: content\n        });\n      });\n      controls.onHits({\n        hits: hits,\n        query: query,\n        rawAnswer: content\n      });\n      return hits;\n    }).then(cb)[\"catch\"](function (e) {\n      if (e.statusCode === 403 && e.message === 'Invalid Application-ID or API key') {\n        controls.onInvalidCredentials();\n        return;\n      } else if (e.statusCode === 429) {\n        controls.onRateLimitReached();\n        return;\n      }\n\n      controls.onError(e);\n    });\n  }\n\n  searcher.configure = function (partial) {\n    var updated = (0, _configure[\"default\"])(_objectSpread({}, params, controls, partial));\n    params = updated.params;\n    controls = updated.controls;\n\n    if (controls.useDeviceLocation && tracker === null) {\n      tracker = navigator.geolocation.watchPosition(function (_ref3) {\n        var coords = _ref3.coords;\n        userCoords = \"\".concat(coords.latitude, \",\").concat(coords.longitude);\n      });\n    } else if (!controls.useDeviceLocation && tracker !== null) {\n      navigator.geolocation.clearWatch(tracker);\n      tracker = null;\n      userCoords = null;\n    }\n  };\n\n  return searcher;\n}","map":{"version":3,"sources":["E:/Projets/projet web avance/angular/angularTest/node_modules/places.js/src/createAutocompleteSource.js"],"names":["Object","defineProperty","exports","value","createAutocompleteSource","_configure","_interopRequireDefault","require","_formatHit","_version","obj","__esModule","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","_ref","algoliasearch","clientOptions","apiKey","appId","hitsPerPage","aroundLatLng","aroundRadius","aroundLatLngViaIP","insideBoundingBox","insidePolygon","getRankingInfo","countries","formatInputValue","_ref$computeQueryPara","computeQueryParams","params","_ref$useDeviceLocatio","useDeviceLocation","_ref$language","language","navigator","split","_ref$onHits","onHits","_ref$onError","onError","e","onRateLimitReached","onInvalidCredentials","type","placesClient","initPlaces","as","addAlgoliaAgent","configuration","controls","userCoords","tracker","geolocation","watchPosition","_ref2","coords","latitude","longitude","searcher","query","cb","searchParams","search","then","content","hits","map","hit","hitIndex","rawAnswer","statusCode","message","configure","partial","updated","_ref3","clearWatch"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createAutocompleteSource;\n\nvar _configure = _interopRequireDefault(require(\"./configure\"));\n\nvar _formatHit = _interopRequireDefault(require(\"./formatHit\"));\n\nvar _version = _interopRequireDefault(require(\"./version\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction createAutocompleteSource(_ref) {\n  var algoliasearch = _ref.algoliasearch,\n      clientOptions = _ref.clientOptions,\n      apiKey = _ref.apiKey,\n      appId = _ref.appId,\n      hitsPerPage = _ref.hitsPerPage,\n      aroundLatLng = _ref.aroundLatLng,\n      aroundRadius = _ref.aroundRadius,\n      aroundLatLngViaIP = _ref.aroundLatLngViaIP,\n      insideBoundingBox = _ref.insideBoundingBox,\n      insidePolygon = _ref.insidePolygon,\n      getRankingInfo = _ref.getRankingInfo,\n      countries = _ref.countries,\n      formatInputValue = _ref.formatInputValue,\n      _ref$computeQueryPara = _ref.computeQueryParams,\n      computeQueryParams = _ref$computeQueryPara === void 0 ? function (params) {\n    return params;\n  } : _ref$computeQueryPara,\n      _ref$useDeviceLocatio = _ref.useDeviceLocation,\n      useDeviceLocation = _ref$useDeviceLocatio === void 0 ? false : _ref$useDeviceLocatio,\n      _ref$language = _ref.language,\n      language = _ref$language === void 0 ? navigator.language.split('-')[0] : _ref$language,\n      _ref$onHits = _ref.onHits,\n      onHits = _ref$onHits === void 0 ? function () {} : _ref$onHits,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? function (e) {\n    throw e;\n  } : _ref$onError,\n      onRateLimitReached = _ref.onRateLimitReached,\n      onInvalidCredentials = _ref.onInvalidCredentials,\n      type = _ref.type;\n  var placesClient = algoliasearch.initPlaces(appId, apiKey, clientOptions);\n  placesClient.as.addAlgoliaAgent(\"Algolia Places \".concat(_version[\"default\"]));\n  var configuration = (0, _configure[\"default\"])({\n    hitsPerPage: hitsPerPage,\n    type: type,\n    countries: countries,\n    language: language,\n    aroundLatLng: aroundLatLng,\n    aroundRadius: aroundRadius,\n    aroundLatLngViaIP: aroundLatLngViaIP,\n    insideBoundingBox: insideBoundingBox,\n    insidePolygon: insidePolygon,\n    getRankingInfo: getRankingInfo,\n    formatInputValue: formatInputValue,\n    computeQueryParams: computeQueryParams,\n    useDeviceLocation: useDeviceLocation,\n    onHits: onHits,\n    onError: onError,\n    onRateLimitReached: onRateLimitReached,\n    onInvalidCredentials: onInvalidCredentials\n  });\n  var params = configuration.params;\n  var controls = configuration.controls;\n  var userCoords;\n  var tracker = null;\n\n  if (controls.useDeviceLocation) {\n    tracker = navigator.geolocation.watchPosition(function (_ref2) {\n      var coords = _ref2.coords;\n      userCoords = \"\".concat(coords.latitude, \",\").concat(coords.longitude);\n    });\n  }\n\n  function searcher(query, cb) {\n    var searchParams = _objectSpread({}, params, {\n      query: query\n    });\n\n    if (userCoords) {\n      searchParams.aroundLatLng = userCoords;\n    }\n\n    return placesClient.search(controls.computeQueryParams(searchParams)).then(function (content) {\n      var hits = content.hits.map(function (hit, hitIndex) {\n        return (0, _formatHit[\"default\"])({\n          formatInputValue: controls.formatInputValue,\n          hit: hit,\n          hitIndex: hitIndex,\n          query: query,\n          rawAnswer: content\n        });\n      });\n      controls.onHits({\n        hits: hits,\n        query: query,\n        rawAnswer: content\n      });\n      return hits;\n    }).then(cb)[\"catch\"](function (e) {\n      if (e.statusCode === 403 && e.message === 'Invalid Application-ID or API key') {\n        controls.onInvalidCredentials();\n        return;\n      } else if (e.statusCode === 429) {\n        controls.onRateLimitReached();\n        return;\n      }\n\n      controls.onError(e);\n    });\n  }\n\n  searcher.configure = function (partial) {\n    var updated = (0, _configure[\"default\"])(_objectSpread({}, params, controls, partial));\n    params = updated.params;\n    controls = updated.controls;\n\n    if (controls.useDeviceLocation && tracker === null) {\n      tracker = navigator.geolocation.watchPosition(function (_ref3) {\n        var coords = _ref3.coords;\n        userCoords = \"\".concat(coords.latitude, \",\").concat(coords.longitude);\n      });\n    } else if (!controls.useDeviceLocation && tracker !== null) {\n      navigator.geolocation.clearWatch(tracker);\n      tracker = null;\n      userCoords = null;\n    }\n  };\n\n  return searcher;\n}"]},"metadata":{},"sourceType":"script"}